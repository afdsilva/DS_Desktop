
import config.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import system.*;

public class Janela extends javax.swing.JFrame {

    private Config config;
    private CardLayout janelas;
    private Categoria categoria;
    private TipoAtividade tipoAtividade;
    private Curso curso;
    private JsonParser json;
    private Logger log;
    private ArrayList<Pedido> listaPedidos;
    private ArrayList<Atividade> listaAtividades;
    private String CurrentView;

    /**
     * CONSTRUTOR Instancia todos os componentes e classes necessários para
     * execução do programa.
     */
    public Janela() {
        initComponents();
        this.config = Config.getInstancia();
        this.log = config.getLog();
        this.setSize(config.getWidth(), config.getHeight());
        this.setMinimumSize(new java.awt.Dimension(config.getWidth(), config.getHeight()));
        this.janelas = (CardLayout) painelBase.getLayout();
        this.janelas.show(painelBase, "painelHome");
        this.CurrentView = "painelHome";
        this.json = new JsonParser();
        carregaSistema();
        setAllFonts();
        this.listaPedidos = new ArrayList<>();
        this.listaAtividades = new ArrayList<>();
        carregarTabelaPedidos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelBase = new javax.swing.JPanel();
        painelHome = new javax.swing.JPanel();
        cabecalhoHome = new javax.swing.JPanel();
        labelCabecalho = new javax.swing.JLabel();
        botaoTutorial = new javax.swing.JButton();
        botaoSair = new javax.swing.JButton();
        painelGroupListaDePedidos = new javax.swing.JPanel();
        scrollTabelaHome = new javax.swing.JScrollPane();
        tabelaPedidos = new javax.swing.JTable();
        botaoCarregarPedido = new javax.swing.JButton();
        botaoRemoverPedido = new javax.swing.JButton();
        botaoNovoPedido = new javax.swing.JButton();
        painelIdentifica = new javax.swing.JPanel();
        cabecalhoIdentifica = new javax.swing.JPanel();
        labelCabecalhoIdentificacao = new javax.swing.JLabel();
        botaoProximo = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        painelGroupIdentificacao = new javax.swing.JPanel();
        textNomeIdentificacao = new javax.swing.JTextField();
        labelNomeIdentificacao = new javax.swing.JLabel();
        labelMatriculaIdentificacao = new javax.swing.JLabel();
        textMatriculaIdentificacao = new javax.swing.JTextField();
        comboCursoIdentificacao = new javax.swing.JComboBox();
        labelCursoIdentificacao = new javax.swing.JLabel();
        painelAtividades = new javax.swing.JPanel();
        cabecalhoAtividades = new javax.swing.JPanel();
        labelCabecalhoAtividades = new javax.swing.JLabel();
        painelGroupIdentificacaoAtividades = new javax.swing.JPanel();
        labelNomeAtividades = new javax.swing.JLabel();
        labelMatriculaAtividades = new javax.swing.JLabel();
        labelCursoAtividades = new javax.swing.JLabel();
        textNomeAtividades = new javax.swing.JTextField();
        textMatriculaAtividades = new javax.swing.JTextField();
        comboCursoAtividades = new javax.swing.JComboBox();
        botaoFinalizar = new javax.swing.JButton();
        painelGroupAtividade = new javax.swing.JPanel();
        labelDescricao = new javax.swing.JLabel();
        labelTipoAtividade = new javax.swing.JLabel();
        labelCategoria = new javax.swing.JLabel();
        labelUnidade = new javax.swing.JLabel();
        textUnidade = new javax.swing.JTextField();
        textDescricao = new javax.swing.JTextField();
        comboTipoAtividadeAtividades = new javax.swing.JComboBox();
        comboCategoriaAtividades = new javax.swing.JComboBox();
        botaoCadastrar = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        botaoRemoverAtividade = new javax.swing.JButton();
        painelGroupListaDeAtividades = new javax.swing.JPanel();
        scrollPaneListaDeAtividades = new javax.swing.JScrollPane();
        tabelaAtividades = new javax.swing.JTable();
        botaoVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelBase.setPreferredSize(new java.awt.Dimension(1024, 768));
        painelBase.setLayout(new java.awt.CardLayout());

        painelHome.setMinimumSize(new java.awt.Dimension(1024, 768));
        painelHome.setPreferredSize(new java.awt.Dimension(1024, 768));

        cabecalhoHome.setBackground(new java.awt.Color(255, 255, 255));

        labelCabecalho.setBackground(new java.awt.Color(255, 255, 255));
        labelCabecalho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/sistac.png"))); // NOI18N

        javax.swing.GroupLayout cabecalhoHomeLayout = new javax.swing.GroupLayout(cabecalhoHome);
        cabecalhoHome.setLayout(cabecalhoHomeLayout);
        cabecalhoHomeLayout.setHorizontalGroup(
            cabecalhoHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cabecalhoHomeLayout.setVerticalGroup(
            cabecalhoHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        botaoTutorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/tutorial2.png"))); // NOI18N
        botaoTutorial.setText("Tutorial");
        botaoTutorial.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoTutorial.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoTutorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoTutorialActionPerformed(evt);
            }
        });

        botaoSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/sair.png"))); // NOI18N
        botaoSair.setText("Sair");
        botaoSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        painelGroupListaDePedidos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Pedidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 18))); // NOI18N

        tabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nome", "Curso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPedidosMouseClicked(evt);
            }
        });
        scrollTabelaHome.setViewportView(tabelaPedidos);

        botaoCarregarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/carregar2.png"))); // NOI18N
        botaoCarregarPedido.setText("Carregar");
        botaoCarregarPedido.setToolTipText("");
        botaoCarregarPedido.setEnabled(false);
        botaoCarregarPedido.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoCarregarPedido.setPreferredSize(new java.awt.Dimension(75, 60));
        botaoCarregarPedido.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoCarregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCarregarPedidoActionPerformed(evt);
            }
        });

        botaoRemoverPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/remover2.png"))); // NOI18N
        botaoRemoverPedido.setText("Remover");
        botaoRemoverPedido.setEnabled(false);
        botaoRemoverPedido.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoRemoverPedido.setPreferredSize(new java.awt.Dimension(75, 60));
        botaoRemoverPedido.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoRemoverPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverPedidoActionPerformed(evt);
            }
        });

        botaoNovoPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/novo2.png"))); // NOI18N
        botaoNovoPedido.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoNovoPedido.setLabel("Novo");
        botaoNovoPedido.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoNovoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovoPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelGroupListaDePedidosLayout = new javax.swing.GroupLayout(painelGroupListaDePedidos);
        painelGroupListaDePedidos.setLayout(painelGroupListaDePedidosLayout);
        painelGroupListaDePedidosLayout.setHorizontalGroup(
            painelGroupListaDePedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupListaDePedidosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelGroupListaDePedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelGroupListaDePedidosLayout.createSequentialGroup()
                        .addComponent(botaoNovoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botaoCarregarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botaoRemoverPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollTabelaHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        painelGroupListaDePedidosLayout.setVerticalGroup(
            painelGroupListaDePedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupListaDePedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollTabelaHome)
                .addGap(18, 18, 18)
                .addGroup(painelGroupListaDePedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoCarregarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRemoverPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoNovoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout painelHomeLayout = new javax.swing.GroupLayout(painelHome);
        painelHome.setLayout(painelHomeLayout);
        painelHomeLayout.setHorizontalGroup(
            painelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelGroupListaDePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(painelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoTutorial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
            .addComponent(cabecalhoHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        painelHomeLayout.setVerticalGroup(
            painelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelHomeLayout.createSequentialGroup()
                .addComponent(cabecalhoHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(painelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelHomeLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(botaoTutorial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botaoSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelHomeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(painelGroupListaDePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelBase.add(painelHome, "painelHome");

        painelIdentifica.setMaximumSize(new java.awt.Dimension(1024, 768));
        painelIdentifica.setMinimumSize(new java.awt.Dimension(1024, 768));
        painelIdentifica.setPreferredSize(new java.awt.Dimension(1024, 768));

        cabecalhoIdentifica.setBackground(new java.awt.Color(255, 255, 255));

        labelCabecalhoIdentificacao.setBackground(new java.awt.Color(255, 255, 255));
        labelCabecalhoIdentificacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/sistac.png"))); // NOI18N

        javax.swing.GroupLayout cabecalhoIdentificaLayout = new javax.swing.GroupLayout(cabecalhoIdentifica);
        cabecalhoIdentifica.setLayout(cabecalhoIdentificaLayout);
        cabecalhoIdentificaLayout.setHorizontalGroup(
            cabecalhoIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalhoIdentificacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cabecalhoIdentificaLayout.setVerticalGroup(
            cabecalhoIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalhoIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        botaoProximo.setText("Próximo");
        botaoProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProximoActionPerformed(evt);
            }
        });

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        painelGroupIdentificacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificação"));

        labelNomeIdentificacao.setText("Nome");

        labelMatriculaIdentificacao.setText("Matricula");

        textMatriculaIdentificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMatriculaIdentificacaoActionPerformed(evt);
            }
        });

        labelCursoIdentificacao.setText("Curso");

        javax.swing.GroupLayout painelGroupIdentificacaoLayout = new javax.swing.GroupLayout(painelGroupIdentificacao);
        painelGroupIdentificacao.setLayout(painelGroupIdentificacaoLayout);
        painelGroupIdentificacaoLayout.setHorizontalGroup(
            painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupIdentificacaoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNomeIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMatriculaIdentificacao)
                    .addComponent(labelCursoIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboCursoIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMatriculaIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNomeIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelGroupIdentificacaoLayout.setVerticalGroup(
            painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupIdentificacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeIdentificacao)
                    .addComponent(textNomeIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMatriculaIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMatriculaIdentificacao))
                .addGap(18, 18, 18)
                .addGroup(painelGroupIdentificacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCursoIdentificacao)
                    .addComponent(comboCursoIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelIdentificaLayout = new javax.swing.GroupLayout(painelIdentifica);
        painelIdentifica.setLayout(painelIdentificaLayout);
        painelIdentificaLayout.setHorizontalGroup(
            painelIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cabecalhoIdentifica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelIdentificaLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(painelIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelGroupIdentificacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelIdentificaLayout.createSequentialGroup()
                        .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );
        painelIdentificaLayout.setVerticalGroup(
            painelIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelIdentificaLayout.createSequentialGroup()
                .addComponent(cabecalhoIdentifica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelGroupIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelIdentificaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelar)
                    .addComponent(botaoProximo))
                .addContainerGap(487, Short.MAX_VALUE))
        );

        botaoProximo.getAccessibleContext().setAccessibleName("Proximo");

        painelBase.add(painelIdentifica, "painelIdentifica");

        painelAtividades.setMinimumSize(new java.awt.Dimension(1024, 768));
        painelAtividades.setPreferredSize(new java.awt.Dimension(1024, 768));

        cabecalhoAtividades.setBackground(new java.awt.Color(255, 255, 255));
        cabecalhoAtividades.setPreferredSize(new java.awt.Dimension(800, 100));

        labelCabecalhoAtividades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/img/sistac.png"))); // NOI18N

        javax.swing.GroupLayout cabecalhoAtividadesLayout = new javax.swing.GroupLayout(cabecalhoAtividades);
        cabecalhoAtividades.setLayout(cabecalhoAtividadesLayout);
        cabecalhoAtividadesLayout.setHorizontalGroup(
            cabecalhoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalhoAtividades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cabecalhoAtividadesLayout.setVerticalGroup(
            cabecalhoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelCabecalhoAtividades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        painelGroupIdentificacaoAtividades.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificação"));

        labelNomeAtividades.setText("Nome");

        labelMatriculaAtividades.setText("Matricula");

        labelCursoAtividades.setText("Curso");

        textNomeAtividades.setEditable(false);

        textMatriculaAtividades.setEditable(false);
        textMatriculaAtividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMatriculaAtividadesActionPerformed(evt);
            }
        });

        comboCursoAtividades.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboCursoAtividades.setEnabled(false);
        comboCursoAtividades.setKeySelectionManager(null);

        javax.swing.GroupLayout painelGroupIdentificacaoAtividadesLayout = new javax.swing.GroupLayout(painelGroupIdentificacaoAtividades);
        painelGroupIdentificacaoAtividades.setLayout(painelGroupIdentificacaoAtividadesLayout);
        painelGroupIdentificacaoAtividadesLayout.setHorizontalGroup(
            painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupIdentificacaoAtividadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNomeAtividades)
                    .addComponent(labelMatriculaAtividades)
                    .addComponent(labelCursoAtividades))
                .addGap(29, 29, 29)
                .addGroup(painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textMatriculaAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNomeAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCursoAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelGroupIdentificacaoAtividadesLayout.setVerticalGroup(
            painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupIdentificacaoAtividadesLayout.createSequentialGroup()
                .addGroup(painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeAtividades)
                    .addComponent(textNomeAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMatriculaAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMatriculaAtividades))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelGroupIdentificacaoAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCursoAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCursoAtividades)))
        );

        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        painelGroupAtividade.setBorder(javax.swing.BorderFactory.createTitledBorder("Atividade"));

        labelDescricao.setText("Descrição");

        labelTipoAtividade.setText("Tipo de Atividade");

        labelCategoria.setText("Categoria");

        labelUnidade.setText("Unidade");

        textDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDescricaoActionPerformed(evt);
            }
        });

        comboTipoAtividadeAtividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoAtividadeAtividadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelGroupAtividadeLayout = new javax.swing.GroupLayout(painelGroupAtividade);
        painelGroupAtividade.setLayout(painelGroupAtividadeLayout);
        painelGroupAtividadeLayout.setHorizontalGroup(
            painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupAtividadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTipoAtividade)
                    .addComponent(labelCategoria)
                    .addComponent(labelDescricao))
                .addGap(18, 18, 18)
                .addGroup(painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelGroupAtividadeLayout.createSequentialGroup()
                        .addComponent(comboTipoAtividadeAtividades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelUnidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelGroupAtividadeLayout.createSequentialGroup()
                        .addComponent(comboCategoriaAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelGroupAtividadeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(textDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        painelGroupAtividadeLayout.setVerticalGroup(
            painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupAtividadeLayout.createSequentialGroup()
                .addGroup(painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescricao)
                    .addComponent(textDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTipoAtividade)
                    .addComponent(labelUnidade)
                    .addComponent(textUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipoAtividadeAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelGroupAtividadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategoria)
                    .addComponent(comboCategoriaAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoRemoverAtividade.setText("Remover");
        botaoRemoverAtividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverAtividadeActionPerformed(evt);
            }
        });

        painelGroupListaDeAtividades.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Atividades Cadastratas"));

        tabelaAtividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "N°", "Descrição", "Horas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPaneListaDeAtividades.setViewportView(tabelaAtividades);

        javax.swing.GroupLayout painelGroupListaDeAtividadesLayout = new javax.swing.GroupLayout(painelGroupListaDeAtividades);
        painelGroupListaDeAtividades.setLayout(painelGroupListaDeAtividadesLayout);
        painelGroupListaDeAtividadesLayout.setHorizontalGroup(
            painelGroupListaDeAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGroupListaDeAtividadesLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(scrollPaneListaDeAtividades)
                .addContainerGap())
        );
        painelGroupListaDeAtividadesLayout.setVerticalGroup(
            painelGroupListaDeAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneListaDeAtividades, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelAtividadesLayout = new javax.swing.GroupLayout(painelAtividades);
        painelAtividades.setLayout(painelAtividadesLayout);
        painelAtividadesLayout.setHorizontalGroup(
            painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cabecalhoAtividades, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addGroup(painelAtividadesLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAtividadesLayout.createSequentialGroup()
                        .addComponent(botaoVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painelGroupListaDeAtividades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAtividadesLayout.createSequentialGroup()
                        .addGroup(painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelAtividadesLayout.createSequentialGroup()
                                .addComponent(botaoRemoverAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoCadastrar)
                                .addGap(8, 8, 8))
                            .addComponent(painelGroupAtividade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(painelGroupIdentificacaoAtividades, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)))
                .addGap(46, 46, 46))
        );
        painelAtividadesLayout.setVerticalGroup(
            painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAtividadesLayout.createSequentialGroup()
                .addComponent(cabecalhoAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(painelGroupIdentificacaoAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelGroupAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoRemoverAtividade)
                    .addComponent(botaoLimpar)
                    .addComponent(botaoCadastrar))
                .addGap(4, 4, 4)
                .addComponent(painelGroupListaDeAtividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAtividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoFinalizar)
                    .addComponent(botaoVoltar))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        painelBase.add(painelAtividades, "painelAtividades");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textMatriculaIdentificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMatriculaIdentificacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMatriculaIdentificacaoActionPerformed

    private void botaoProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProximoActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        //validacao dos campos
        if (!textNomeIdentificacao.getText().isEmpty() && (!textMatriculaIdentificacao.getText().isEmpty()) && comboCursoIdentificacao.getSelectedIndex() != 0) {
            //cria o profile do usuario no momento da identificacao
            Aluno aluno = new Aluno(textNomeIdentificacao.getText(), textMatriculaIdentificacao.getText(), Curso.getCurso(comboCursoIdentificacao.getSelectedItem().toString()) );
            this.listaAtividades = new ArrayList<>();
            Pedido pedido = new Pedido(aluno,0, 0, listaAtividades);
            this.json.saveRequest(pedido);
            
            //seta os atributos na proxima tela
            this.textNomeAtividades.setText(textNomeIdentificacao.getText());
            this.textMatriculaAtividades.setText(textMatriculaIdentificacao.getText());
            this.comboCursoAtividades.setSelectedItem(comboCursoIdentificacao.getSelectedItem());
            
            limparCampos();
            //limpa a lista de atividades
            for (int i = 0; i < this.tabelaAtividades.getRowCount(); i++) {
                //tabelaAtividades.setValueAt((linha + 1), linha, 0);//atributo do aluno, linha, coluna
                this.tabelaAtividades.setValueAt(null, i, 0);
                this.tabelaAtividades.setValueAt(null, i, 1);
                this.tabelaAtividades.setValueAt(null, i, 2);
            }
            
            //exibe o painel de atividades
            this.janelas.show(painelBase, "painelAtividades");
            this.CurrentView = "painelAtividades";
        }
    }//GEN-LAST:event_botaoProximoActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        this.janelas.show(painelBase, "painelHome");
        this.CurrentView = "painelHome";
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_botaoSairActionPerformed

    private void botaoTutorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoTutorialActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        this.janelas.show(painelBase, "tutorial");
        this.CurrentView = "tutorial";

    }//GEN-LAST:event_botaoTutorialActionPerformed

    private void botaoCarregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCarregarPedidoActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        Pedido aux = new Pedido();
        aux = listaPedidos.get(tabelaPedidos.getSelectedRow());
        carregarPedido(aux);
        this.janelas.show(painelBase, "painelAtividades");
        this.CurrentView = "painelAtividadesCarregar";
    }//GEN-LAST:event_botaoCarregarPedidoActionPerformed

    private void botaoNovoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovoPedidoActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        //Limpa os campos do painel Identificacao
        this.comboCursoIdentificacao.setSelectedIndex(0);
        this.textNomeIdentificacao.setText(null);
        this.textMatriculaIdentificacao.setText(null);
        this.textDescricao.setName(null);
        //exibe o painel
        this.janelas.show(painelBase, "painelIdentifica");
        this.CurrentView = "painelIdentifica";
        
    }//GEN-LAST:event_botaoNovoPedidoActionPerformed

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        this.log.log(Level.INFO, "Painel: {0}", this.CurrentView);
        switch (this.CurrentView) {
            case "painelAtividades":
                this.janelas.show(painelBase, "painelIdentifica");
                this.CurrentView = "painelIdentifica";
                break;
            case "painelAtividadesCarregar":
                this.janelas.show(painelBase, "painelHome");
                this.CurrentView = "painelHome";
        }
        
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoRemoverAtividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverAtividadeActionPerformed
        //pega pedido selecionado
        Pedido pedido = listaPedidos.get(tabelaPedidos.getSelectedRow());
        //pega atividade selecionada
        int linhaSelecionada = tabelaAtividades.getSelectedRow();
        //remove a atividade selecionada da lista de atividades do pedido selecionado
        pedido.getListaAtividadesComplementares().remove(linhaSelecionada);
        //atualiza a tabela de atividades na tela
        carregarTabelaAtividades(pedido.getListaAtividadesComplementares());
    }//GEN-LAST:event_botaoRemoverAtividadeActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        
        if (!this.textDescricao.getText().isEmpty() && !(this.comboTipoAtividadeAtividades.getSelectedIndex() == 0) && !(this.comboCategoriaAtividades.getSelectedIndex() == 0)) {
            TipoAtividade atividade = TipoAtividade.getTipoAtividade(this.comboTipoAtividadeAtividades.getSelectedItem().toString());
            Atividade a = new Atividade(this.textDescricao.getText(), atividade, Integer.parseInt(this.textUnidade.getText()));
            this.listaAtividades.add(a);
            
            carregarTabelaAtividades(this.listaAtividades);
            limparCampos();
        }
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void textDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDescricaoActionPerformed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
        log.log(Level.INFO, "Painel: {0}", CurrentView);
        
        Aluno aluno = new Aluno(textNomeAtividades.getText(), textMatriculaAtividades.getText(), Curso.getCurso(comboCursoAtividades.getSelectedItem().toString()) );
        Pedido pedido = new Pedido(aluno,0, 0, listaAtividades);
        this.json.saveRequest(pedido);
        
        this.janelas.show(painelBase, "painelHome");
        CurrentView = "painelHome";
        
        DefaultTableModel dtm = (DefaultTableModel) tabelaPedidos.getModel();
        dtm.setRowCount(0);
        
        carregarTabelaPedidos();
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    private void textMatriculaAtividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMatriculaAtividadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMatriculaAtividadesActionPerformed

    private void tabelaPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPedidosMouseClicked
        listaPedidos.get(selecionarPedido());
        botaoCarregarPedido.setEnabled(true);
        botaoRemoverPedido.setEnabled(true);


    }//GEN-LAST:event_tabelaPedidosMouseClicked

    private void botaoRemoverPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverPedidoActionPerformed
        log.info(listaPedidos.get(selecionarPedido()).getAluno().getMatricula());
        if (json.removerArquivo(listaPedidos.get(selecionarPedido()).getAluno().getMatricula())) {
            listaPedidos.remove(selecionarPedido() + ".json");
        }
        carregarTabelaPedidos();
    }//GEN-LAST:event_botaoRemoverPedidoActionPerformed

    private void comboTipoAtividadeAtividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoAtividadeAtividadesActionPerformed
        /**
         * Seta a visibilidade e label do campo unidade conforme o combo Tipo Atividade
         */
        if(comboTipoAtividadeAtividades.getSelectedIndex() != 0) {
            String selTipoAtividade = comboTipoAtividadeAtividades.getSelectedItem().toString();
            
            String unidade = TipoAtividade.getTipoAtividade(selTipoAtividade).getUnidadeTipoAtividade();
            String categoria = TipoAtividade.getTipoAtividade(selTipoAtividade).getCategoria().getNome();
            
            this.comboCategoriaAtividades.setSelectedItem(categoria);
            if (unidade != "unidade") {
                this.labelUnidade.setVisible(true);
                this.labelUnidade.setText(unidade);
                this.textUnidade.setVisible(true);
                this.textUnidade.setText(null);
            } else {
                this.labelUnidade.setVisible(false);
                this.textUnidade.setVisible(false);
                this.textUnidade.setText("1");
            }
        } else {
            this.labelUnidade.setVisible(false);
            this.textUnidade.setVisible(false);
            if (this.comboCategoriaAtividades.getItemCount() > 0)
                this.comboCategoriaAtividades.setSelectedIndex(0);
        }
    }//GEN-LAST:event_comboTipoAtividadeAtividadesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoCarregarPedido;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoNovoPedido;
    private javax.swing.JButton botaoProximo;
    private javax.swing.JButton botaoRemoverAtividade;
    private javax.swing.JButton botaoRemoverPedido;
    private javax.swing.JButton botaoSair;
    private javax.swing.JButton botaoTutorial;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JPanel cabecalhoAtividades;
    private javax.swing.JPanel cabecalhoHome;
    private javax.swing.JPanel cabecalhoIdentifica;
    private javax.swing.JComboBox comboCategoriaAtividades;
    private javax.swing.JComboBox comboCursoAtividades;
    private javax.swing.JComboBox comboCursoIdentificacao;
    private javax.swing.JComboBox comboTipoAtividadeAtividades;
    private javax.swing.JLabel labelCabecalho;
    private javax.swing.JLabel labelCabecalhoAtividades;
    private javax.swing.JLabel labelCabecalhoIdentificacao;
    private javax.swing.JLabel labelCategoria;
    private javax.swing.JLabel labelCursoAtividades;
    private javax.swing.JLabel labelCursoIdentificacao;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelMatriculaAtividades;
    private javax.swing.JLabel labelMatriculaIdentificacao;
    private javax.swing.JLabel labelNomeAtividades;
    private javax.swing.JLabel labelNomeIdentificacao;
    private javax.swing.JLabel labelTipoAtividade;
    private javax.swing.JLabel labelUnidade;
    private javax.swing.JPanel painelAtividades;
    private javax.swing.JPanel painelBase;
    private javax.swing.JPanel painelGroupAtividade;
    private javax.swing.JPanel painelGroupIdentificacao;
    private javax.swing.JPanel painelGroupIdentificacaoAtividades;
    private javax.swing.JPanel painelGroupListaDeAtividades;
    private javax.swing.JPanel painelGroupListaDePedidos;
    private javax.swing.JPanel painelHome;
    private javax.swing.JPanel painelIdentifica;
    private javax.swing.JScrollPane scrollPaneListaDeAtividades;
    private javax.swing.JScrollPane scrollTabelaHome;
    private javax.swing.JTable tabelaAtividades;
    private javax.swing.JTable tabelaPedidos;
    private javax.swing.JTextField textDescricao;
    private javax.swing.JTextField textMatriculaAtividades;
    private javax.swing.JTextField textMatriculaIdentificacao;
    private javax.swing.JTextField textNomeAtividades;
    private javax.swing.JTextField textNomeIdentificacao;
    private javax.swing.JTextField textUnidade;
    // End of variables declaration//GEN-END:variables

//==============================================================================    
// CARREGAMENTO DO SISTEMA    
//==============================================================================
    /**
     * Este método é resposável por carregar o sistema Ex: combos, classes,
     * arquivo de configuração;
     */
    private void carregaSistema() {
        ArrayList<Categoria> listaCategoriasCComp = new ArrayList<Categoria>();
        ArrayList<Categoria> listaCategoriasEComp = new ArrayList<Categoria>();
        ArrayList<Curso> listaCursos = new ArrayList<Curso>();
        listaCategoriasCComp.addAll(this.json.getCategories("ccomp"));          // Carrega todas as categorias do arquivo ccomp
        listaCategoriasEComp.addAll(this.json.getCategories("ecomp"));          // Carrega todas as categorias do arquivo ecomp
        Curso cursoCiencia = new Curso();
        Curso cursoEng = new Curso();
        
        // Carrega cursos na lista de cursos --> um pouco diferente dos outros pq pega dos arquivos
        cursoCiencia.setNome("Ciência da Computação");
        cursoCiencia.setCodigo(3900);
        cursoCiencia.setListaCategorias(listaCategoriasCComp);
        listaCursos.add(cursoCiencia);
        cursoEng.setNome("Engenharia de Computação");
        cursoEng.setCodigo(3910);
        cursoEng.setListaCategorias(listaCategoriasEComp);
        listaCursos.add(cursoEng);
        Curso.setListaCursos(listaCursos);
        
        //Removido codigo anterior para dar lugar aos LOADERS que jah existiam
        //Quando o codigo for carregado do JSON deve ser alterado os metodos loadCategorias() e o loadTipoAtividades();
        //pois eles jah preenchem as listas
        Categoria.loadCategorias();
        TipoAtividade.loadTipoAtividades();
        
        setComboCursoIdentificacao();
        setComboCursoAtividades();
        setComboTipoAtividadeAtividades();
        setComboCategoriaAtividades();
    }

    /**
     * Seta todas as fontes do programa
     */
    public void setAllFonts() {
        this.botaoCadastrar.setFont(config.getFontLabel());
        this.botaoCarregarPedido.setFont(config.getFontLabel());
        this.botaoFinalizar.setFont(config.getFontLabel());
        this.botaoLimpar.setFont(config.getFontLabel());
        this.botaoNovoPedido.setFont(config.getFontLabel());
        this.botaoProximo.setFont(config.getFontLabel());
        this.botaoRemoverAtividade.setFont(config.getFontLabel());
        this.botaoRemoverPedido.setFont(config.getFontLabel());
        this.botaoSair.setFont(config.getFontLabel());
        this.botaoTutorial.setFont(config.getFontLabel());
        this.botaoVoltar.setFont(config.getFontLabel());
        //this.cabecalhoAtividades.setFont(config.getFontTexto());
        //this.cabecalhoHome.setFont(config.getFontTexto());
        //this.cabecalhoIdentifica.setFont(config.getFontTexto());
        this.comboCategoriaAtividades.setFont(config.getFontTexto());
        this.comboCursoAtividades.setFont(config.getFontTexto());
        this.comboCursoIdentificacao.setFont(config.getFontTexto());
        this.comboTipoAtividadeAtividades.setFont(config.getFontTexto());
        this.labelCabecalho.setFont(config.getFontLabel());
        this.labelCabecalhoAtividades.setFont(config.getFontLabel());
        this.labelCabecalhoIdentificacao.setFont(config.getFontLabel());
        this.labelCategoria.setFont(config.getFontLabel());
        this.labelCursoAtividades.setFont(config.getFontLabel());
        this.labelCursoIdentificacao.setFont(config.getFontTexto());
        this.labelDescricao.setFont(config.getFontTexto());
        this.labelMatriculaAtividades.setFont(config.getFontTexto());
        this.labelMatriculaIdentificacao.setFont(config.getFontTexto());
        this.labelNomeAtividades.setFont(config.getFontTexto());
        this.labelNomeIdentificacao.setFont(config.getFontTexto());
        this.labelTipoAtividade.setFont(config.getFontTexto());
        this.labelUnidade.setFont(config.getFontTexto());
        this.painelAtividades.setFont(config.getFontTexto());
        this.painelBase.setFont(config.getFontTexto());
        this.painelGroupAtividade.setFont(config.getFontTexto());
        ((TitledBorder)this.painelGroupAtividade.getBorder()).setTitleFont(config.getFontTitulo());
        this.painelGroupIdentificacao.setFont(config.getFontTexto());
        ((TitledBorder)this.painelGroupIdentificacao.getBorder()).setTitleFont(config.getFontTitulo());
        this.painelGroupIdentificacaoAtividades.setFont(config.getFontTexto());
        ((TitledBorder)this.painelGroupIdentificacaoAtividades.getBorder()).setTitleFont(config.getFontTitulo());
        this.painelGroupListaDeAtividades.setFont(config.getFontTexto());
        ((TitledBorder)this.painelGroupListaDeAtividades.getBorder()).setTitleFont(config.getFontTitulo());
        this.painelGroupListaDePedidos.setFont(config.getFontTexto());
        ((TitledBorder)this.painelGroupListaDePedidos.getBorder()).setTitleFont(config.getFontTitulo());
        
        this.painelHome.setFont(config.getFontTexto());
        this.painelIdentifica.setFont(config.getFontTexto());
        this.scrollPaneListaDeAtividades.setFont(config.getFontTexto());
        this.scrollTabelaHome.setFont(config.getFontTexto());
        this.tabelaAtividades.setFont(config.getFontTexto());
        this.tabelaAtividades.getTableHeader().setFont(config.getFontLabel());
        this.tabelaPedidos.setFont(config.getFontTexto());
        this.tabelaPedidos.getTableHeader().setFont(config.getFontLabel());
        this.textDescricao.setFont(config.getFontTexto());
        this.textMatriculaAtividades.setFont(config.getFontTexto());
        this.textMatriculaIdentificacao.setFont(config.getFontTexto());
        this.textNomeAtividades.setFont(config.getFontTexto());
        this.textNomeIdentificacao.setFont(config.getFontTexto());
        this.textUnidade.setFont(config.getFontTexto());
    }

//==============================================================================
    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//   TELA HOME    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++    
    /*
     Esta função carrega os pedidos retirados da pasta save e insere
     dentro da tabela de pedidos.
     */
    private void carregarTabelaPedidos() {

        if (!listaPedidos.isEmpty()) {
            listaPedidos.clear();
        }
        listaPedidos.addAll(json.parseFilesToJSON());   // carrega todos os arquivos .json para dentro da tabela
        int linha = 0;

        for (Pedido p : this.listaPedidos) {
            Aluno aluno = p.getAluno();
            DefaultTableModel modelo = (DefaultTableModel) tabelaPedidos.getModel();
            modelo.addRow(new Object[]{aluno.getMatricula(), aluno.getNome(), aluno.getCurso().getNome()});
        }

    }

    /**
     * Seleciona um pedido da tabela de pedidos, retorna o indice do ArrayList
     * que faz refeência para o objeto Pedido.
     *
     * @return
     */
    private int selecionarPedido() {
        return this.tabelaPedidos.getSelectedRow();
    }

    /**
     * Carrega o pedido na tela do usuário.
     *
     * @param
     *
     */
    private void carregarPedido(Pedido pedido) {
        //identificacao
        this.textNomeAtividades.setText(pedido.getAluno().getNome());
        this.textMatriculaAtividades.setText(pedido.getAluno().getMatricula());
        this.comboCursoAtividades.setSelectedItem(pedido.getAluno().getCurso().getNome());
        //atividades
        limparCampos();
        carregarTabelaAtividades(pedido.getListaAtividadesComplementares());

    }
    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+++++++++++
    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//   TELA IDENTIFICACAO    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++    
    /**
     * Carrega a combo curso na tela de identificação
     */
    private void setComboCursoIdentificacao() {
        this.comboCursoIdentificacao.addItem("Selecione um curso");
        for (Curso curso : Curso.getListaCursos()) {
            this.comboCursoIdentificacao.addItem(curso.getNome());
        }
    }
    
    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+++++++++++    
    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//   TELA ATIVIDADES    
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++     
    /**
     * Limpa os campos do formulário de cadastro de atividade
     *
     */
    private void limparCampos() {
        this.comboCategoriaAtividades.setSelectedIndex(0);
        this.comboTipoAtividadeAtividades.setSelectedIndex(0);
        this.textDescricao.setText(null);
        this.textUnidade.setText(null);
    }

    /**
     * Carrega a combo curso na tela de atividades
     */
    private void setComboCursoAtividades() {
        for (Curso curso : Curso.getListaCursos()) {
            this.comboCursoAtividades.addItem(curso.getNome());
        }
    }

    /**
     * Carrega a combo categoria na tela de atividades
     */
    private void setComboCategoriaAtividades() {
        this.comboCategoriaAtividades.addItem("Selecione uma Categoria");
        for (Categoria categoria : Categoria.getListaCategorias()) {
            this.comboCategoriaAtividades.addItem(categoria.getNome());
        }
    }

    /**
     * Carrega a combo Tipo Atividade na tela de atividades
     */
    private void setComboTipoAtividadeAtividades() {
        this.comboTipoAtividadeAtividades.addItem("Selecione um Tipo de Atividade");
        for (TipoAtividade ta : TipoAtividade.getListaTipoAtividades()) {
            this.comboTipoAtividadeAtividades.addItem(ta.getDescricao());
        }
    }

    /**
     * carrega as informações dos objetos na tabela atividades.
     *
     * @param listaAtividades
     */
    private void carregarTabelaAtividades(ArrayList<Atividade> listaAtividades) {
        Integer linha = 0;
        for (int i = 0; i < this.tabelaAtividades.getRowCount(); i++) {
            //tabelaAtividades.setValueAt((linha + 1), linha, 0);//atributo do aluno, linha, coluna
            this.tabelaAtividades.setValueAt(null, i, 0);
            this.tabelaAtividades.setValueAt(null, i, 1);
            this.tabelaAtividades.setValueAt(null, i, 2);
        }
        
        if (!listaAtividades.isEmpty()) {
            for (Atividade a : listaAtividades) {
                log.info(a.getDescricao());
                log.info(a.getUnidadeAtividadeAproveitada().toString());
                log.info(a.getCategoria().getNome());
                log.info(a.getTipoAtividade().getDescricao());

                tabelaAtividades.setValueAt((linha + 1), linha, 0);//atributo do aluno, linha, coluna
                tabelaAtividades.setValueAt(a.getDescricao(), linha, 1);
                tabelaAtividades.setValueAt(a.getUnidadeAtividadeAproveitada().toString(), linha, 2);

                linha++;
            }
        }
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+++++++++++
